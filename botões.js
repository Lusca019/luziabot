const makeWASocket = require('@whiskeysockets/baileys').default
const { delay, DisconnectReason, fetchLatestBaileysVersion, useMultiFileAuthState} = require('@whiskeysockets/baileys')
const { unlink, existsSync, mkdirSync } = require('fs');
const P = require('pino');
const fs = require('fs');
const cep = require('cep-promise');
const dayjs = require('dayjs');
require('dayjs/locale/pt-br');
const Path = 'Session';
const { initializeApp, applicationDefault, cert } = require('firebase-admin/app');
const { getFirestore, Timestamp, FieldValue } = require('firebase-admin/firestore');
const serviceAccount = require('./serviceAccountKey.json');

initializeApp({
    credential: cert(serviceAccount)
});

const db = getFirestore();
const GroupCheck = (jid) => {
    const regexp = new RegExp(/^\d{18}@g.us$/)
    return regexp.test(jid)
}

const Update = (sock) => {
    sock.on('connection.update', ({ connection, lastDisconnect, qr }) => {
        if (qr) {
            console.log('Qrcode: ', qr);
        };
        if (connection === 'close') {
            const Reconnect = lastDisconnect.error?.output?.statusCode !== DisconnectReason.loggedOut
            if (Reconnect) Connection()
            console.log(`CONEX√ÉO FECHADA! RAZ√ÉO: ` + DisconnectReason.loggedOut.toString());
            if (Reconnect === false) {
                fs.rmSync(Path, { recursive: true, force: true });
                const removeAuth = Path
                unlink(removeAuth, err => {
                    if (err) throw err
                })
            }
        }
        if (connection === 'open') {
            console.log('BOT CONECTADO')
        }
    })
}

const Connection = async () => {
    const { version } = await fetchLatestBaileysVersion()
    const { state, saveCreds } = await useMultiFileAuthState('Session')
    const config = {
        auth: state,
        logger: P({ level: 'error' }),
        printQRInTerminal: true,
        generateHighQualityLinkPreview: true,
        syncFullHistory: true,
        keepAliveIntervalMs: 5000,
        version,
        connectTimeoutMs: 60_000,
        emitOwnEvents: false,
        async getMessage(key) {
            return { conversation: key };
        },
        patchMessageBeforeSending: (message) => {
            const requiresPatch = !!(message.buttonsMessage || message.listMessage || message.templateMessage);
            if (requiresPatch) {
                message = {
                    viewOnceMessageV2: {
                        message: {
                            messageContextInfo: {
                                deviceListMetadataVersion: 2,
                                deviceListMetadata: {},
                            },
                            ...message,
                        },
                    },
                };
            }
            return message;
        },
    }
    const sock = makeWASocket(config);
    Update(sock.ev);
    sock.ev.on('creds.update', saveCreds);

    const SendMessage = async (jid, msg) => {
        await sock.presenceSubscribe(jid)
        await delay(2000)
        await sock.sendPresenceUpdate('composing', jid)
        await delay(1500)
        await sock.sendPresenceUpdate('paused', jid)
        return await sock.sendMessage(jid, msg)
    }



    sock.ev.on('messages.upsert', async ({ messages, type }) => {
        const msg = messages[0]
        const nomeUsuario = msg.pushName;
        const jid = msg.key.remoteJid
        const numero = jid.replace(/\D/g, '');



        if (!msg.key.fromMe && jid !== 'status@broadcast' && !GroupCheck(jid)) {
            sock.readMessages(jid, msg.key.participant, [msg.key.id])
            const filePath = `./info/${numero}.json`
            const docRef = db.collection('users').doc(numero);
            const anjoRef = await docRef.get()
            const depoimentoRef = db.collection('users').doc(numero)
            const depoimentoRef2 = db.collection('denuncias').doc()
            const quantidadeDenuncia = db.collection('contador').doc('denuncias')

            const dateNow = new Date();
            const currentMonth = dateNow.getMonth() + 1;
            const diarometro = db.collection('diarometro').doc()
            let date = new Date(Date.now());
            let horarioAtual = dayjs(date).locale('pt-br')


            let data = {
                nome: '',
                apelido: '',
                cep: '',
                estado: '',
                cidade: '',
                bairro: '',
                rua: '',
                depoimentos: '',
                nome_terceiros: '',
                local_terceiros: '',
                numeroAnjo: '',
                numerosAnjo: [],
                nivel_do_dp: '',
                denuncia2: '',
                depoimentos_terceiros: '',
                depoimentos_diarometro: [],
                dataN: '',
                email: '',
                nome_empresa: '',
                endereco_empresa: '',
                cep_empresa: '',
                email_empresa: '',
                ramo_de_atividade: '',
                nomeEmbaixador: '',
                stage: 'inicial',
                bot: true
            }
            if (fs.existsSync(filePath)) {

            } else {
                fs.writeFileSync(filePath, JSON.stringify(data, null, 1), 'utf-8', (err) => {
                    if (err) throw err;
                    console.log('O arquivo foi criado!');
                });

                // const buttons = [
                //     { buttonId: 'Eu mulher', buttonText: { displayText: 'üôã‚Äç‚ôÄÔ∏è Eu mulher üíãüíÑ' }, type: 1 },
                //     { buttonId: 'Eu mulher', buttonText: { displayText: '‚úåÔ∏è Eu volunt√°rio' }, type: 1 },
                //     { buttonId: 'Eu mulher', buttonText: { displayText: '‚ûï Mais op√ß√µes' }, type: 1 },
                // ];
                // const buttonMessage = {
                //     text: `üë©‚Äç‚öñÔ∏è Ol√° *${nomeUsuario}*\r\nseja bem vinda ao meu mundo!\r\nsou a LUZIA ! Sua amiga e conselheira virtual.\r\nMinha miss√£o na terra √© lutar pelo fim da viol√™ncia contra a mulher.\r\nQUAL √â SUA MISS√ÉO???\r\nlhe convido a entrar e juntar-se comigo nessa causa.\r\nsendo uma V√çTIMA ou VOLUNT√ÅRIO\r\nentre para nossa comunidade e conhe√ßa toda nossa rede de apoio e acolhimento.\r\nLEMBRE-SE!!!\r\nvoc√™ n√£o est√° sozinha!\r\nReaja em quanto h√° tempo! ou entre para uma legi√£o de voluntariados que apoiam direto ou indiretamente.`,
                //     footer: 'Escolha uma das op√ß√µes abaixo!',
                //     buttons: buttons,
                //     headerType: 1
                // }
                // await SendMessage(jid, buttonMessage)
            }
            if (msg.message.buttonsResponseMessage) {
                const gerenciador = fs.readFileSync(filePath, 'utf-8')
                const user = JSON.parse(gerenciador)
                const info = fs.readFileSync(filePath, 'utf-8')
                const userInfo = JSON.parse(info)
                console.log(msg.message.buttonsResponseMessage.selectedButtonId)
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Eu mulher' && userInfo.bot === true) {
                    user.stage = 'perguntar nome'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Eu mulher' && userInfo.bot === true && userInfo.email !== '') {
                    user.stage = 'eu mulher ja cadastrado'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Canais de denuncia' && userInfo.bot === true) {
                    user.stage = 'escolheu canais de denuncia'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Den√∫ncia' || msg.message.buttonsResponseMessage.selectedButtonId === 'Denunciar novamente' && userInfo.bot === true) {
                    user.stage = 'escolheu denuncia'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Para Mim Mesmo' && userInfo.bot === true) {
                    user.stage = 'denuncia para mim mesmo'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Para terceiros' && userInfo.bot === true) {
                    user.stage = 'denuncia Para terceiros'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Menu inicial' && userInfo.bot === true) {
                    user.stage = 'inicial'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'SimEnviardp' && userInfo.bot === true) {
                    await depoimentoRef.update({
                        depoimentos: FieldValue.arrayUnion({
                            depoimento: userInfo.depoimentos,
                            hora: `${horarioAtual}`
                        })
                    });
                    await depoimentoRef2.set({
                        numero: numero,
                        depoimento: userInfo.depoimentos,
                        hora: Timestamp.fromDate(new Date()),
                        nomeCompleto: userInfo.nome,
                        apedido: userInfo.apelido,
                        cep: userInfo.cep,
                        bairro: userInfo.bairro,
                        rua: userInfo.rua,
                        dataN: userInfo.dataN,
                        email: msg.message.conversation,
                        mes: currentMonth

                    });
                    await quantidadeDenuncia.update({
                        numero: FieldValue.increment(1),

                    });
                    user.depoimentos = ''
                    user.stage = 'perguntar fluxo'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'N√£oEnviardp' && userInfo.bot === true) {
                    user.stage = 'cancelou o depoimento'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Papel de Parede' && userInfo.bot === true) {
                    user.stage = 'mandar o papel de parede'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Diar√¥metro' && userInfo.bot === true) {
                    user.stage = 'mandar a lista do diarometro'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Disque emerg√™ncia' && userInfo.bot === true) {
                    user.stage = 'mandar lista de numeros de emergencia'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'naoConfirmaAddNumVazio' && userInfo.bot === true) {
                    user.stage = 'pedir para digitar um numero para add'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'N√£oEnviarPapel' && userInfo.bot === true) {
                    user.stage = 'n√£o quis enviar dp do papel de parede'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'SimEnviarPapel' && userInfo.bot === true) {
                    user.stage = 'escolheu denuncia'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'SimEnviarDpDiarometro' && userInfo.bot === true) {
                    user.stage = 'escolheu enviar uma denuncia diarometro'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'NaoEnviarDpDiarometro' && userInfo.bot === true) {
                    user.stage = 'escolheu n√£o enviar uma denuncia diarometro'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'N√£oEnviarDpDiarometro' && userInfo.bot === true) {
                    user.stage = 'escolheu nao enviar denuncia diarometro'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'EnviarDpDiarometro' && userInfo.bot === true) {
                    const diarometroDenuncia = db.collection('contador').doc('denuncias')
                    await depoimentoRef.update({
                        diarometro: FieldValue.arrayUnion({
                            depoimento: userInfo.dp_diarometro,
                            titulo: userInfo.titulo_do_dp,
                            nivel: userInfo.nivel_do_dp,
                            hora: `${horarioAtual}`
                        })
                    });
                    await depoimentoRef2.set({
                        depoimento: userInfo.dp_diarometro,
                        titulo: userInfo.titulo_do_dp,
                        nivel: userInfo.nivel_do_dp,
                        hora: Timestamp.fromDate(new Date()),
                        nomeCompleto: userInfo.nome,
                        apedido: userInfo.apelido,
                        cep: userInfo.cep,
                        bairro: userInfo.bairro,
                        rua: userInfo.rua,
                        dataN: userInfo.dataN,
                        email: userInfo.email,
                        mes: currentMonth
                    });
                    await diarometro.set({
                        numero: numero,
                        depoimento: userInfo.dp_diarometro,
                        titulo: userInfo.titulo_do_dp,
                        nivel: userInfo.nivel_do_dp,
                        hora: `${horarioAtual}`
                    });
                    await quantidadeDenuncia.update({
                        numero: FieldValue.increment(1),
                        [userInfo.titulo_do_dp]: FieldValue.increment(1),
                    });

                    user.stage = 'dp diarometro enviado com sucesso';
                    user.depoimentos_diarometro = []
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'NEnviarDpDiarometro' && userInfo.bot === true) {
                    user.nivel_do_dp = ''
                    user.depoimentos_diarometro = []
                    user.stage = 'escolheu nao enviar denuncia diarometro'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Anjo da Guarda' && anjoRef.data().numerosAnjo !== [] && userInfo.bot === true) {
                    user.stage = 'confirmou o numero que digitou'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Anjo da Guarda' && anjoRef.data().numerosAnjo === [] && userInfo.bot === true) {
                    user.stage = 'escolheu anjo da guarda vazio'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'para1Numero' && userInfo.numeroAnjo !== '' && userInfo.bot === true) {
                    user.stage = 'enviar dp para 1 numero'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'simAddNumVazio' && userInfo.bot === true) {
                    user.stage = 'pedir para digitar um numero para add'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'simConfirmaAddNumVazio' && userInfo.bot === true) {
                    await depoimentoRef.update({
                        numerosAnjo: FieldValue.arrayUnion(userInfo.numeroAnjo)
                    });
                    user.numerosAnjo.push(userInfo.numeroAnjo)

                    user.stage = 'confirmou o numero que digitou'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'simAddMaisNumVazio' && userInfo.bot === true) {
                    user.stage = 'pedir para digitar um numero para add mais'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'simConfirmaAddMaisNumVazio' && userInfo.bot === true) {
                    user.stage = 'pedir para digitar um numero para add mais'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'naoAddNumVazio' && userInfo.bot === true) {
                    user.stage = 'eu mulher ja cadastrado'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'voltar para menu' && userInfo.bot === true) {
                    user.stage = 'eu mulher ja cadastrado'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'maisop√ß√µes' && userInfo.bot === true) {
                    user.stage = 'outras op√ß√µes anjo guardi√£o'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Limpar lista' && userInfo.bot === true) {
                    await depoimentoRef.update({
                        numerosAnjo: FieldValue.delete()
                    });
                    user.numerosAnjo = []
                    user.stage = 'escolheu anjo da guarda vazio'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Eu volunt√°rio' && userInfo.bot === true) {
                    user.stage = 'entrou no eu voluntario'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Canais de denuncia 2' && userInfo.bot === true) {
                    user.stage = 'entrou no Canais de denuncia 2'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'disque emergencia 2' && userInfo.bot === true) {
                    user.stage = 'entrou no disque emergencia 2'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'dununcia 2' || msg.message.buttonsResponseMessage.selectedButtonId === 'Denunciar novamente 2' && userInfo.bot === true) {
                    user.stage = 'entrou no dununcia 2'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'SimEnviardenuncia2' && userInfo.bot === true) {
                    await depoimentoRef.update({
                        depoimentos: FieldValue.arrayUnion({
                            depoimento: user.denuncia2,
                            hora: `${horarioAtual}`

                        })
                    });
                    await depoimentoRef2.set({
                        numero: numero,
                        depoimento: user.denuncia2,
                        hora: Timestamp.fromDate(new Date()),
                        nomeCompleto: userInfo.nome,
                        apedido: userInfo.apelido,
                        cep: userInfo.cep,
                        bairro: userInfo.bairro,
                        rua: userInfo.rua,
                        dataN: userInfo.dataN,
                        email: userInfo.email,
                        mes: currentMonth

                    });
                    await quantidadeDenuncia.update({
                        numero: FieldValue.increment(1),

                    });
                    diarometroDenuncia
                    user.stage = 'denuncia 2 enviada'
                    user.denuncia2 = ''
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'N√£oEnviardenuncia2' && userInfo.bot === true) {
                    user.stage = 'denuncia 2 n√£o enviada'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Eu apoio' && userInfo.bot === true) {
                    user.stage = 'entrou em eu apoio'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                    const sections = [
                        {
                            title: "Op√ß√µes",
                            rows: [
                                { title: "Eu empresa", rowId: "Eu empresa", description: "Quero fazer parte do programa de rede de apoio e acolhimento as mulheres em estado de vulnerabilidade¬†de¬†viol√®ncia." },
                                { title: "Eu embaixador", rowId: "Eu embaixador", description: "Quero fazer parte do programa de rede de apoio e acolhimento as mulheres em estado de vulnerabilidade¬†de¬†viol√®ncia." },
                                // { title: "Publicidade social", rowId: "Publicidade social", description: "Quero fazer parte do programa de rede de apoio e acolhimento as mulheres em estado de vulnerabilidade¬†de¬†viol√®ncia." }
                            ]
                        },

                    ]

                    const listMessage = {
                        text: "Escolha uma das op√ß√µes abaixo!",
                        footer: "",
                        title: "",
                        buttonText: "Clique Aqui!",
                        sections
                    }

                    await SendMessage(jid, listMessage)
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'n√£oDadosEmpresa' && userInfo.bot === true) {
                    user.nome_empresa = ''
                    user.endereco_empresa = ''
                    user.cep_empresa = ''
                    user.email_empresa = ''
                    user.ramo_de_atividade = ''
                    user.stage = 'Cancelou o cadastro da empresa'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Eu empresabtn' && userInfo.bot === true) {
                    user.stage = 'perguntar o nome da empresa'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'simDadosEmpresa' && userInfo.bot === true) {
                    const empresasRef = db.collection('empresas').doc(user.nome_empresa)
                    await empresasRef.set({
                        nome: user.nome_empresa,
                        endereco: user.endereco_empresa,
                        cep: user.cep_empresa,
                        email: user.email_empresa,
                        ramo: user.ramo_de_atividade,
                    });
                    // user.nome_empresa = ''
                    // user.endereco_empresa = ''
                    // user.cep_empresa = ''
                    // user.email_empresa = ''
                    // user.ramo_de_atividade = ''
                    user.stage = 'empresa cadastrada com sucesso'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'enviar notificacao' && userInfo.bot === true) {
                    anjoRef.data().numerosAnjo.map(async data => {
                        await SendMessage(`${data}@s.whatsapp.net`, { text: 'testando' })
                    })

                    // user.stage = 'empresa cadastrada com sucesso'
                    // fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Acolha-me' && userInfo.bot === true) {
                    user.stage = 'O usu√°rio entrou em Acolha-me'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Direitos Humanos' && userInfo.bot === true) {
                    user.stage = 'O usu√°rio entrou em Direitos Humanos'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Mais op√ß√µes' && userInfo.bot === true) {
                    user.stage = 'O usu√°rio entrou em Mais op√ß√µes'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Publicidade social' && userInfo.bot === true) {
                    user.stage = 'O usu√°rio entrou em Publicidade social'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Livro Luiza-Homem' && userInfo.bot === true) {
                    user.stage = 'O usu√°rio entrou em Livro Luiza-Homem'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.buttonsResponseMessage.selectedButtonId === 'Compartilhar Chatbot' && userInfo.bot === true) {
                    user.stage = 'O usu√°rio entrou em Compartilhar Chatbot'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }

            }
            if (msg.message.listResponseMessage) {
                // console.log(msg.message.listResponseMessage.title)
                const gerenciador = fs.readFileSync(filePath, 'utf-8')
                const user = JSON.parse(gerenciador)
                const respList = msg.message.listResponseMessage.singleSelectReply.selectedRowId
                const respBebida = msg.message.listResponseMessage.title
                const regex = msg.message.listResponseMessage.singleSelectReply.selectedRowId
                const info = fs.readFileSync(filePath, 'utf-8')
                const userInfo = JSON.parse(info)

                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Piadas ofensivas' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 1
                    user.stage = 'perguntar de ela deseja descrever Piadas ofensivas'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Chantagem' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 2
                    user.stage = 'perguntar de ela deseja descrever Chantagem'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Mentir - Enganar' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 3
                    user.stage = 'perguntar de ela deseja descrever Mentir - Enganar'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Culpar' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 4
                    user.stage = 'perguntar de ela deseja descrever Culpar'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Desqualificar' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 5
                    user.stage = 'perguntar de ela deseja descrever Desqualificar'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Ridicularizar - Ofender' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 6
                    user.stage = 'perguntar de ela deseja descrever Ridicularizar - Ofender'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Humilhar em publico' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 7
                    user.stage = 'perguntar de ela deseja descrever Humilhar em publico'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Controlar - proibir' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 8
                    user.stage = 'perguntar de ela deseja descrever Controlar - proibir'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Intimidar - amea√ßar' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 9
                    user.stage = 'perguntar de ela deseja descrever Intimidar - amea√ßar'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Expor a vida intima' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 10
                    user.stage = 'perguntar de ela deseja descrever Expor a vida intima'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Destruir bens pessoais' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 11
                    user.stage = 'perguntar de ela deseja descrever Destruir bens pessoais'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Machucar - Sacudir' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 12
                    user.stage = 'perguntar de ela deseja descrever Machucar - Sacudir'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Brincar de bater' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 13
                    user.stage = 'perguntar de ela deseja descrever Brincar de bater'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Empurrar' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 14
                    user.stage = 'perguntar de ela deseja descrever Empurrar'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Xingar' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 15
                    user.stage = 'perguntar de ela deseja descrever Xingar'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Diminuir a autoestima' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 16
                    user.stage = 'perguntar de ela deseja descrever Diminuir a autoestima'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                // if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Diminuir a autoestima' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                //     user.titulo_do_dp = (respList)
                //     user.nivel_do_dp = 16
                //     user.stage = 'perguntar de ela deseja descrever Diminuir a autoestima'
                //     fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                // }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Impedir de prevenir a gravidez' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 17
                    user.stage = 'perguntar de ela deseja descrever Impedir de prevenir a gravidez'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Dar tapas' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 18
                    user.stage = 'perguntar de ela deseja descrever Dar tapas'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Chutar' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 19
                    user.stage = 'perguntar de ela deseja descrever Chutar'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Confinar - Prender' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 20
                    user.stage = 'perguntar de ela deseja descrever Confinar - Prender'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Amea√ßar com objetos ou armas' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 21
                    user.stage = 'perguntar de ela deseja descrever Amea√ßar com objetos ou armas'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'For√ßar rela√ß√£o sexual' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 22
                    user.stage = 'perguntar de ela deseja descrever For√ßar rela√ß√£o sexual'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Obrigar a abortar' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 23
                    user.stage = 'perguntar de ela deseja descrever Obrigar a abortar'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Causar les√£o corporal grave - Mutilar' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 24
                    user.stage = 'perguntar de ela deseja descrever Causar les√£o corporal grave - Mutilar'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Amea√ßar de morte' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 25
                    user.stage = 'perguntar de ela deseja descrever Amea√ßar de morte'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'MATAR' && userInfo.stage === 'mandar a lista do diarometro' && userInfo.bot === true) {
                    user.titulo_do_dp = (respList)
                    user.nivel_do_dp = 26
                    user.stage = 'perguntar de ela deseja descrever MATAR'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Eu embaixador' && userInfo.nomeEmbaixador === '' && userInfo.bot === true) {
                    user.stage = 'Perguntar o nome do embaixador'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
                if (msg.message.listResponseMessage.singleSelectReply.selectedRowId === 'Eu embaixador' && userInfo.bot === true) {
                    user.stage = 'Perguntar o nome do embaixador'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }

                if (msg.message.listResponseMessage.title === 'Eu empresa' && userInfo.bot === true) {
                    user.stage = 'perguntar o nome da empresa'
                    fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                }
            }
            if (msg.message.conversation) {
                // console.log(msg.message.conversation)
                const gerenciador = fs.readFileSync(filePath, 'utf-8')
                const user = JSON.parse(gerenciador)
                const info = fs.readFileSync(filePath, 'utf-8')
                const userInfo = JSON.parse(info)
                switch (userInfo.stage) {
                    case 'perguntar nome':
                        user.nome = (msg.message.conversation)
                        user.stage = 'perguntar apelido'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break;
                    case 'perguntar apelido':
                        user.apelido = (msg.message.conversation)
                        user.stage = 'perguntar cep'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break;
                    case 'perguntar cep':
                        cep(msg.message.conversation)
                            .then((result) => {
                                console.log(result)
                                user.estado = (result.state);
                                user.cidade = (result.city);
                                user.bairro = (result.neighborhood);
                                user.rua = (result.street);
                                user.cep = (msg.message.conversation)
                                fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                            })
                            .catch((error) => {
                                console.log(error);
                                SendMessage(jid, { text: 'CEP NAO ENCONTRADO' })
                            });
                        user.stage = 'perguntar numero'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break;
                    case 'perguntar numero':
                        user.numeroResidencia = msg.message.conversation
                        user.stage = 'perguntar data de nascimento'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'perguntar data de nascimento':
                        user.dataN = (msg.message.conversation)
                        user.stage = 'perguntar email'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')

                        break;
                    case 'perguntar email':
                        await docRef.set({
                            nomeCompleto: userInfo.nome,
                            apedido: userInfo.apelido,
                            cep: userInfo.cep,
                            bairro: userInfo.bairro,
                            cidade: userInfo.cidade,
                            estado: userInfo.estado,
                            numero: numero,
                            rua: userInfo.rua,
                            dataN: userInfo.dataN,
                            email: msg.message.conversation
                        });
                        user.email = (msg.message.conversation)
                        user.stage = 'confirmar cadastro'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'denuncia para mim mesmo':
                        user.depoimentos = msg.message.conversation
                        user.stage = 'pergunta se quer enviar o depoimento'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'escolheu enviar uma denuncia diarometro':
                        user.dp_diarometro = msg.message.conversation
                        user.depoimentos_diarometro.push(userInfo.nivel_do_dp + '-' + msg.message.conversation)
                        user.stage = 'pergunta se quer enviar o depoimento diarometro'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'Perguntar o nome do embaixador':
                        user.nomeEmbaixador = (msg.message.conversation)
                        user.stage = 'perguntar o cep do Embaixador'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'pedir para digitar um numero para add':
                        user.numeroAnjo = (msg.message.conversation)
                        user.stage = 'confirmar o numero adcionado vazio'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'denuncia Para terceiros':
                        user.nome_terceiros = msg.message.conversation
                        user.stage = 'perguntar onde ocorreu'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'perguntar onde ocorreu':
                        user.local_ocorrido = msg.message.conversation
                        user.stage = 'escrever texto do depoimento'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'escrever texto do depoimento':
                        await depoimentoRef.update({
                            depoimentosTerceiros: FieldValue.arrayUnion({
                                depoimento: msg.message.conversation,
                                local: userInfo.local_ocorrido,
                                nome: userInfo.nome_terceiros,
                                hora: `${horarioAtual}`
                            })
                        });
                        await depoimentoRef2.set({
                            numero: numero,
                            depoimento: msg.message.conversation,
                            local: userInfo.local_ocorrido,
                            nome: userInfo.nome_terceiros,
                            hora: Timestamp.fromDate(new Date()),
                            nomeCompleto: userInfo.nome,
                            apedido: userInfo.apelido,
                            cep: userInfo.cep,
                            bairro: userInfo.bairro,
                            rua: userInfo.rua,
                            dataN: userInfo.dataN,
                            email: msg.message.conversation,
                            mes: currentMonth
                        });
                        await quantidadeDenuncia.update({
                            numero: FieldValue.increment(1),

                        });
                        user.depoimentos_terceiros = ''
                        user.nome_terceiros = ''
                        user.local_ocorrido = ''
                        user.stage = 'perguntar fluxo'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'entrou no dununcia 2':
                        user.denuncia2 = msg.message.conversation
                        user.stage = 'pergunta se quer enviar a denuncia'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'perguntar o nome da empresa':
                        user.nome_empresa = msg.message.conversation
                        user.stage = 'pergunta o endere√ßo da empresa'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'pergunta o endere√ßo da empresa':
                        user.endereco_empresa = msg.message.conversation
                        user.stage = 'pergunta o cep da empresa'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'pergunta o cep da empresa':
                        user.cep_empresa = msg.message.conversation
                        user.stage = 'pergunta o email da empresa'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'pergunta o email da empresa':
                        user.email_empresa = msg.message.conversation
                        user.stage = 'pergunta o ramo da empresa'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'pergunta o ramo da empresa':
                        user.ramo_de_atividade = msg.message.conversation
                        user.stage = 'confirmar dados da empresa'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'perguntar o cep do Embaixador':
                        user.cepEmbaixador = msg.message.conversation
                        user.stage = 'perguntar data de nascimento do embaixador'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'perguntar data de nascimento do embaixador':
                        user.dataEmbaixador = (msg.message.conversation)
                        user.stage = 'perguntar email do embaixador'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'perguntar email do embaixador':
                        await depoimentoRef.update({
                            embaixadores: FieldValue.arrayUnion({
                                nome: userInfo.nomeEmbaixador,
                                dataN: userInfo.dataEmbaixador,
                                email: msg.message.conversation,
                                endereco: userInfo.cep_empresa,
                                hora: `${horarioAtual}`
                            })
                        });
                        user.emailEmbaixador = (msg.message.conversation)
                        user.stage = 'Embaxador cadastrado com sucesso'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case 'O usu√°rio entrou em Acolha-me':
                        user.stage = 'inicial'
                        fs.writeFileSync(filePath, JSON.stringify(user, null, 1,), 'utf-8')
                        break
                    case '':
                        break
                    case '':
                        break
                    default:
                        console.log(`fora de qualquer stage`);
                }

            }
            if (msg.message.audioMessage) {
                const gerenciador = fs.readFileSync(filePath, 'utf-8')
                const user = JSON.parse()
                const info = fs.readFileSync(filePath, 'utf-8')
                const userInfo = JSON.parse(info)
                switch (userInfo.stage) {
                    case 'receber audio':

                        break
                    default:
                        console.log(`fora de qualquer stage`);
                }
            }
            try {
                const info = fs.readFileSync(filePath, 'utf-8')
                const userInfo = JSON.parse(info)
                console.log(userInfo.stage);

                if (userInfo.bot === true) {
                    switch (userInfo.stage) {
                        //MENSAGEM DE WELCOME
                        case 'inicial':
                            const buttons333 = [
                                { buttonId: 'id1', buttonText: { displayText: 'Button 1' }, type: 1 },
                                { buttonId: 'id2', buttonText: { displayText: 'Button 2' }, type: 1 },
                                { buttonId: 'id3', buttonText: { displayText: 'Button 3' }, type: 1 }
                            ]

                            const buttonMessage333 = {
                                text: "Hi it's button message",
                                footer: 'Hello World',
                                buttons: buttons333,
                                headerType: 1
                            }

                            SendMessage(jid, buttonMessage333)
                            const buttons = [
                                { buttonId: 'Eu mulher', buttonText: { displayText: 'üôã‚Äç‚ôÄÔ∏è Eu mulher üíãüíÑ' }, type: 1 },
                                { buttonId: 'Eu volunt√°rio', buttonText: { displayText: '‚úåÔ∏è Eu volunt√°rio' }, type: 1 },
                                { buttonId: 'Mais op√ß√µes', buttonText: { displayText: '‚ûï Mais op√ß√µes' }, type: 1 },
                            ];
                            const buttonMessage = {
                                text: `üë©‚Äç‚öñÔ∏è Ol√°\r\nseja bem vinda ao meu mundo!\r\nsou a LUZIA ! Sua amiga e conselheira virtual.\r\nMinha miss√£o na terra √© lutar pelo fim da viol√™ncia contra a mulher.\r\nQUAL √â SUA MISS√ÉO???\r\nlhe convido a entrar e juntar-se comigo nessa causa.\r\nsendo uma V√çTIMA ou VOLUNT√ÅRIO\r\nentre para nossa comunidade e conhe√ßa toda nossa rede de apoio e acolhimento.\r\nLEMBRE-SE!!!\r\nvoc√™ n√£o est√° sozinha!\r\nReaja em quanto h√° tempo! ou entre para uma legi√£o de voluntariados que apoiam direto ou indiretamente.`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage)
                            break;
                        case 'perguntar nome':
                            await SendMessage(jid, { text: 'üôã‚Äç‚ôÄÔ∏è\r\nQue bom ter voc√™ aqui no meu mundo virtual j√° vi que voc√™ √© uma mulher de atitude!\r\nPara mantermos uma rela√ß√£o de amizade e confian√ßa, tenho que conhecer melhor seu mundo real, preciso de algumas informa√ß√µes b√°sicas de voc√™.' })
                            await SendMessage(jid, { text: 'digite para mim seu nome completo por favor.' })
                            break;
                        case 'perguntar apelido':
                            SendMessage(jid, { text: 'Agora me diga em como voc√™ gostaria de ser chamada.' })
                            break;
                        case 'perguntar cep':
                            await SendMessage(
                                jid,
                                {
                                    image: fs.readFileSync("img/cep.jpeg"),
                                    caption: "Digite seu CEP.\n\nCaso n√£o saiba seu CEP, clique no link abaixo para consultar.\r\nüîóüì≤https://buscacepinter.correios.com.br/app/endereco/index.php",
                                    gifPlayback: false
                                }
                            )
                            break;
                        case 'perguntar numero':
                            await SendMessage(jid, { text: 'Qual √© o n√∫mero da sua resid√™ncia?' })
                            break
                        case 'perguntar data de nascimento':
                            SendMessage(jid, { text: 'Digite sua data de nascimento.\n\n*Exemplo: 24/05/1980*' })

                            break;
                        case 'perguntar email':
                            SendMessage(jid, { text: 'Digite seu E-mail.' })

                            break;
                        case 'confirmar cadastro':
                            const buttons2 = [
                                { buttonId: 'Canais de denuncia', buttonText: { displayText: 'Canais de denuncia üÜò' }, type: 1 },
                                { buttonId: 'Diar√¥metro', buttonText: { displayText: 'Diar√¥metro üå°Ô∏è' }, type: 1 },
                                { buttonId: 'Anjo da Guarda', buttonText: { displayText: 'Anjo da Guarda üëº' }, type: 1 },
                            ];
                            const buttonMessage2 = {
                                text: `Parab√©ns ${userInfo.apelido}\r\npela iniclativa de se mobilizar, fazendo parte de nossa comunidade e contar com toda nossa rede de apoio.\r\na partir de agora, somos amigas e parceiras ! Sempre que precisar √© s√≥ me acionar!\r\nLembre-se.\r\nVoc√™ n√£o est√° Sozinha!\r\nQuem te proteje nunca dorme.`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons2,
                                headerType: 1
                            }
                            await SendMessage(jid, { text: 'Ok, cadastro feito com sucesso!' })
                            await SendMessage(jid, buttonMessage2);
                            break;
                        case 'escolheu canais de denuncia':
                            const buttons3 = [
                                { buttonId: 'Disque emerg√™ncia', buttonText: { displayText: 'Disque Emerg√™ncia' }, type: 1 },
                                { buttonId: 'Den√∫ncia', buttonText: { displayText: 'Den√∫ncia' }, type: 1 },
                                { buttonId: 'Papel de Parede', buttonText: { displayText: 'Sinal de amea√ßa' }, type: 1 },
                            ];
                            const buttonMessage3 = {
                                text: `Parab√©ns ${userInfo.apelido}\r\npela iniclativa de se mobilizar, fazendo parte de nossa comunidade e contar com toda nossa rede de apoio.\r\na partir de agora, somos amigas e parceiras ! Sempre que precisar √© s√≥ me acionar!\r\nLembre-se.\r\nVoc√™ n√£o est√° Sozinha!\r\nQuem te proteia nunca Dorme.`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons3,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage3);
                            break
                        case 'escolheu denuncia':
                            const buttons4 = [
                                { buttonId: 'Para Mim Mesmo', buttonText: { displayText: 'Para Mim Mesmo' }, type: 1 },
                                { buttonId: 'Para terceiros', buttonText: { displayText: 'Para terceiros' }, type: 1 },

                            ];
                            const buttonMessage4 = {
                                text: `A den√∫ncia √©...`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons4,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage4)

                            break
                        case 'denuncia para mim mesmo': //caso a seja para mim mesmo a denuncia
                            await SendMessage(jid, { text: 'Descreva seu depoimento.\nAten√ß√£o: ‚ö†Ô∏èüÜò\nN√£o esque√ßa de procurar ajuda a pessoas  pr√≥ximas e denunciar, juntar  provas, fotos, v√≠deos e testemunhos presenciais.\nLeve o caso as autoridades e registre o BO! (Boletim de ocorr√™ncia).' })

                            break
                        case 'denuncia Para terceiros':
                            await SendMessage(jid, { text: 'Digite o nome da v√≠tima.' })
                            break
                        case 'escrever texto do depoimento': //pede para escrever depoimento
                            await SendMessage(jid, { text: 'Descreva seu depoimento.\nAten√ß√£o: ‚ö†Ô∏èüÜò\nN√£o esque√ßa de procurar ajuda a pessoas  pr√≥ximas e denunciar, juntar  provas, fotos, v√≠deos e testemunhos presenciais.\nLeve o caso as autoridades e registre o BO! (Boletim de ocorr√™ncia).' })
                            break
                        case 'escrever texto do depoimento terceiros': //pede para escrever depoimento
                            await SendMessage(jid, { text: 'Escreva o ocorrido.' })
                            break
                        case 'perguntar onde ocorreu':
                            await SendMessage(jid, { text: 'Onde ocorreu?' })
                            break
                        case 'perguntar fluxo':
                            const buttons21 = [
                                { buttonId: 'Denunciar novamente', buttonText: { displayText: 'Denunciar novamente' }, type: 1 },
                                { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },

                            ];

                            const buttonMessage21 = {
                                text: `Sua den√∫ncia foi enviada com sucesso!`,
                                footer: 'qual √© a sua pr√≥xima a√ß√£o ?',
                                buttons: buttons21,
                                headerType: 1
                            }

                            await SendMessage(jid, buttonMessage21)
                            break
                        case 'pergunta se quer enviar o depoimento':
                            const buttons7 = [
                                { buttonId: 'SimEnviardp', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'N√£oEnviardp', buttonText: { displayText: 'N√£o' }, type: 1 },

                            ];
                            const buttonMessage7 = {
                                text: `O texto acima est√° correto?`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons7,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage7);
                            break
                        case 'confirmou o depoimento': //se o depoimento estiver correto
                            SendMessage(jid, { text: 'Sua denuncia foi enviada e ser√° mantido o devido sigilo.' })
                            break
                        case 'cancelou o depoimento': //se o depoimento n√£o estiver correto
                            const buttons23 = [
                                { buttonId: 'Denunciar novamente', buttonText: { displayText: 'Denunciar novamente' }, type: 1 },
                                { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },

                            ];

                            const buttonMessage23 = {
                                text: `Sua denuncia n√£o foi enviada.`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons23,
                                headerType: 1
                            }

                            await SendMessage(jid, buttonMessage23)

                            break
                        case 'mandar o papel de parede': //papel de parede               
                            await SendMessage(
                                jid,
                                {
                                    image: fs.readFileSync("img/quero ajudar.jpeg"),
                                    caption: "SINAL DE AMEA√áA\r\nEm caso de ass√©dio, importuna√ß√£o sexual toque no X O da foto em tela cheia e mostre a uma pessoa mais pr√≥xima, PE√áA AJUDA!",
                                    gifPlayback: false
                                }

                            )
                            const buttons8 = [
                                { buttonId: 'SimEnviarPapel', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'N√£oEnviarPapel', buttonText: { displayText: 'N√£o' }, type: 1 },

                            ];
                            const buttonMessage8 = {
                                text: `Ok ${userInfo.apelido}, Gostaria de enviar essa den√∫ncia as autoridades?`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons8,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage8);
                            break
                        case 'mandar a lista do diarometro': //diarometro
                            const sections = [
                                {
                                    title: "Fique atenta! üò®.",
                                    rows: [
                                        { title: "N√≠vel 1 - Piadas ofensivas", rowId: "Piadas ofensivas", },
                                        { title: "N√≠vel 2 - Chantagem", rowId: "Chantagem", },
                                        { title: "N√≠vel 3 - Mentir - Enganar", rowId: "Mentir - Enganar", },
                                        { title: "N√≠vel 4 - Culpar", rowId: "Culpar", },
                                        { title: "N√≠vel 5 - Desqualificar", rowId: "Desqualificar", },
                                        { title: "N√≠vel 6 - Ridicularizar - Ofender", rowId: "Ridicularizar - Ofender", },
                                        { title: "N√≠vel 7 - Humilhar em publico", rowId: "Humilhar em publico", },
                                        { title: "N√≠vel 8 - Controlar - proibir", rowId: "Controlar - proibir", }
                                    ]
                                },
                                {
                                    title: "Reaja! üò∞.",
                                    rows: [
                                        { title: "N√≠vel 9 - Intimidar - amea√ßar", rowId: "Intimidar - amea√ßar", },
                                        { title: "N√≠vel 10 - Expor a vida intima", rowId: "Expor a vida intima", },
                                        { title: "N√≠vel 11 - Destruir bens pessoais", rowId: "Destruir bens pessoais", },
                                        { title: "N√≠vel 12 - Machucar - Sacudir", rowId: "Machucar - Sacudir", },
                                        { title: "N√≠vel 13 - Brincar de bater", rowId: "Brincar de bater", },
                                        { title: "N√≠vel 14 - Empurrar", rowId: "Empurrar", },
                                        { title: "N√≠vel 15 - Xingar", rowId: "Xingar", },
                                        { title: "N√≠vel 16 - Diminuir a autoestima", rowId: "Diminuir a autoestima", },
                                        { title: "N√≠vel 17 - Impedir de prevenir a gravidez", rowId: "Impedir de prevenir a gravidez", },
                                    ]
                                },
                                {
                                    title: "Procure ajuda! üò±üßêüò°.",
                                    rows: [
                                        { title: "N√≠vel 18 - Dar tapas", rowId: "Dar tapas", },
                                        { title: "N√≠vel 19 - Chutar", rowId: "Chutar", },
                                        { title: "N√≠vel 20 - Confinar - Prender", rowId: "Confinar - Prender", },
                                        { title: "N√≠vel 21 - Amea√ßar com objetos ou armas", rowId: "Amea√ßar com objetos ou armas", },
                                        { title: "N√≠vel 22 - For√ßar rela√ß√£o sexual", rowId: "For√ßar rela√ß√£o sexual", },
                                        { title: "N√≠vel 23 - Obrigar a abortar", rowId: "Obrigar a abortar", },
                                        { title: "N√≠vel 24 - Causar les√£o corporal grave - Mutilar", rowId: "Causar les√£o corporal grave - Mutilar", },
                                        { title: "N√≠vel 25 - Amea√ßar de morte", rowId: "Amea√ßar de morte", },
                                        { title: "N√≠vel 26 - MATAR", rowId: "MATAR", },
                                    ]
                                },




                            ]

                            const listMessage = {
                                text: "*Em que n√≠vel voc√™ est√°?*",
                                footer: "Tome uma atitude antes que seja tarde demais, fique atenta! a viol√™ncia tende a aumentar.",
                                title: "DIAR√îMETRO: O term√¥metro do seu relacionamento.",
                                buttonText: "Escolha aqui!",
                                sections
                            }
                            await SendMessage(
                                jid,
                                {
                                    image: fs.readFileSync("img/dairometro.jpeg"),
                                    caption: "",
                                    gifPlayback: false
                                }
                            )
                            await SendMessage(jid, listMessage)
                            break
                        case 'eu mulher ja cadastrado':
                            const buttons6 = [
                                { buttonId: 'Canais de denuncia', buttonText: { displayText: 'Canais de denuncia üÜò' }, type: 1 },
                                { buttonId: 'Diar√¥metro', buttonText: { displayText: 'Diar√¥metro üå°Ô∏è' }, type: 1 },
                                { buttonId: 'Anjo da Guarda', buttonText: { displayText: 'Anjo da Guarda üëº' }, type: 1 },
                            ];
                            const buttonMessage6 = {
                                text: `üë©üèª‚Äçüíº Que bom ${userInfo.apelido}, ter voc√™ aqui mais vez e contar com sua participa√ß√£o ativa e importante para nossa causa ! `,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons6,
                                headerType: 1
                            }

                            await SendMessage(jid, buttonMessage6);
                            break
                        case 'mandar lista de numeros de emergencia':
                            const vcard = 'BEGIN:VCARD\n'
                                + 'VERSION:3.0\n'
                                + 'FN:Ouvidoria da Mulher\n'
                                + 'ORG:Ouvidoria da Mulher;\n'
                                + 'TEL;type=CELL;type=VOICE;waid=5561996565008:+55 61 99656 5008\n'
                                + 'END:VCARD'

                            const buttons22 = [
                                { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },

                            ];

                            const buttonMessage22 = {
                                text: `Em caso de emerg√™ncia de uma grave amea√ßa, acione as for√ßas de seguran√ßa: pol√≠cia üìûüì≤ 190 üöîüÜò`,
                                footer: 'Para continuar, aperte o bot√£o abaixo!',
                                buttons: buttons22,
                                headerType: 1
                            }

                            await SendMessage(jid, { contacts: { displayName: 'Ouvidoria da Mulher', contacts: [{ vcard }] } })
                            await SendMessage(jid, buttonMessage22)

                            break
                        case 'n√£o quis enviar dp do papel de parede':
                            const buttons24 = [
                                { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },

                            ];

                            const buttonMessage24 = {
                                text: `Voltar para o menu`,
                                footer: 'Para continuar, aperte o bot√£o abaixo!',
                                buttons: buttons24,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage24)
                            break
                        case 'perguntar de ela deseja descrever Piadas ofensivas':
                            const buttons9 = [
                                { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                            ];
                            const buttonMessage9 = {
                                text: `*Piadas ofensivas.*\n\nQue bom ${userInfo.apelido}, por voc√™ estar atenta e reconhecer que (piadas onfensivas) √© o primeiro (01) passo para tentar mudar o rumo da hist√≥ria da sua vida.\n\n*Deseja descrever a a√ß√£o como ocorreu?*`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons9,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage9);
                            break
                        case 'escolheu enviar uma denuncia diarometro':
                            await SendMessage(jid, { text: 'Descreva seu depoimento.\nAten√ß√£o: ‚ö†Ô∏èüÜò\nN√£o esque√ßa de procurar ajuda a pessoas  pr√≥ximas e denunciar, juntar  provas, fotos, v√≠deos e testemunhos presenciais.\nLeve o caso as autoridades e registre o BO! (Boletim de ocorr√™ncia).' })
                            break
                        case 'pergunta se quer enviar o depoimento diarometro':
                            const buttons10 = [
                                { buttonId: 'EnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'NEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                            ];
                            const buttonMessage10 = {
                                text: `Voc√™ deseja anotar o texto acima?`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons10,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage10);
                            break
                        case 'dp diarometro enviado com sucesso':
                            const buttons26 = [
                                { buttonId: 'Diar√¥metro', buttonText: { displayText: 'Voltar para o Diar√¥metro' }, type: 1 },
                                { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },

                            ];

                            const buttonMessage26 = {
                                text: `Depoimento anotado com sucesso!`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons26,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage26)
                            break
                        case 'escolheu nao enviar denuncia diarometro':
                            const buttons37 = [
                                { buttonId: 'Diar√¥metro', buttonText: { displayText: 'Voltar para o Diar√¥metro' }, type: 1 },
                                { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },

                            ];

                            const buttonMessage37 = {
                                text: `O texto n√£o foi anotado, o que deseja fazer agora.`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons37,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage37)
                            break
                        case 'escolheu n√£o enviar uma denuncia diarometro':
                            const buttons25 = [
                                { buttonId: 'Diar√¥metro', buttonText: { displayText: 'Voltar para o Diar√¥metro' }, type: 1 },
                                { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },

                            ];

                            const buttonMessage25 = {
                                text: `Qual op√ß√£o deseja escolher?`,
                                footer: 'Para continuar, aperte o bot√£o abaixo!',
                                buttons: buttons25,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage25)
                            break
                        case 'perguntar de ela deseja descrever Chantagem':
                            const buttons11 = [
                                { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                            ];
                            const buttonMessage11 = {
                                //Muito bem ${userInfo.apelido}!Por voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( 18¬∞ ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e  n√£o  deixar chegar √†s √∫ltimas consequ√™ncias.(feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia)ou solicitou uma ME(Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√°  tempo de reverter esse quadro!
                                text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( 2¬∞ ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e  n√£o  deixar chegar √†s √∫ltimas consequ√™ncias.(feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia)ou solicitou uma ME(Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√°  tempo de reverter esse quadro!`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons11,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage11);
                            break
                        case 'perguntar de ela deseja descrever Mentir - Enganar':
                            const buttons12 = [
                                { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                            ];
                            const buttonMessage12 = {
                                text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( 3¬∞ ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons12,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage12);
                            break
                        case 'perguntar de ela deseja descrever Culpar':
                            const buttons13 = [
                                { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                            ];
                            const buttonMessage13 = {
                                text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( 4¬∞ ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons13,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage13);
                            break
                        case 'perguntar de ela deseja descrever Desqualificar':
                            const buttons14 = [
                                { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                            ];
                            const buttonMessage14 = {
                                text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( 5¬∞ ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons14,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage14);
                            break
                        case 'perguntar de ela deseja descrever Ridicularizar - Ofender':
                            const buttons15 = [
                                { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                            ];
                            const buttonMessage15 = {
                                text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons15,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage15);
                            break
                        case 'perguntar de ela deseja descrever Humilhar em publico':
                            const buttons38 = [
                                { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                            ];
                            const buttonMessage38 = {
                                text: `*Humilhar em publico.*\n\nQue bom ${userInfo.apelido}, por voc√™ estar atenta e reconhecer que (Humilhar em publico) √© o setimo (${userInfo.nivel_do_dp}) passo para tentar mudar o rumo da hist√≥ria da sua vida.\n\n*Deseja descrever a a√ß√£o como ocorreu?*`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons38,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage38);
                            break
                        case 'perguntar de ela deseja descrever Controlar - proibir':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Intimidar - amea√ßar':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Expor a vida intima':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Destruir bens pessoais':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Machucar - Sacudir':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Brincar de bater':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Empurrar':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Xingar':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Diminuir a autoestima':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Impedir de prevenir a gravidez':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Dar tapas':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Chutar':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Confinar - Prender':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Amea√ßar com objetos ou armas':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever For√ßar rela√ß√£o sexual':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Obrigar a abortar':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Causar les√£o corporal grave - Mutilar':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever Amea√ßar de morte':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'perguntar de ela deseja descrever MATAR':
                            try {
                                const buttons39 = [
                                    { buttonId: 'SimEnviarDpDiarometro', buttonText: { displayText: 'Sim' }, type: 1 },
                                    { buttonId: 'NaoEnviarDpDiarometro', buttonText: { displayText: 'N√£o' }, type: 1 },

                                ];
                                const buttonMessage39 = {
                                    text: `Muito bem ${userInfo.apelido}!\nPor voc√™ estar atenta e reconhecer que (${userInfo.titulo_do_dp}) √© o ( ${userInfo.nivel_do_dp} ) passo para tentar mudar o rumo da hist√≥ria da sua vida, e n√£o deixar chegar √†s √∫ltimas consequ√™ncias. (feminicidio) Voc√™ j√° √© v√≠tima de viol√™ncia f√≠sica e de uma grave amea√ßa! Se n√£o procurou as autoridades ou registrou o BO, (Boletim de ocorr√™ncia) ou solicitou uma ME (Medida Protetiva) fa√ßa isso o mais r√°pido poss√≠vel.\n√â sua integridade f√≠sica ou sua pr√≥pria vida que est√° em jogo! A√≠nda h√° tempo de reverter esse quadro!`,
                                    footer: 'Escolha uma das op√ß√µes abaixo!',
                                    buttons: buttons39,
                                    headerType: 1
                                }
                                await SendMessage(jid, buttonMessage39);
                            } catch (error) {

                            }
                            break
                        case 'escolheu anjo da guarda vazio':
                            const buttons16 = [
                                { buttonId: 'simAddNumVazio', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'naoAddNumVazio', buttonText: { displayText: 'N√£o' }, type: 1 },

                            ];
                            const buttonMessage16 = {
                                text: `${userInfo.apelido} a lista de contatos est√° vazia, deseja adicionar algum n√∫mero?`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons16,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage16);
                            break
                        case 'escolheu anjo da guarda':
                            let numsStr = userInfo.numeroAnjo.replace(/[^0-9]/g, '');
                            await SendMessage(jid, { text: `${numsStr}` })
                            break
                        case 'pedir para digitar um numero para add':
                            await SendMessage(jid, { text: 'Digite um n√∫mero para ser adicionado.\n\nExemplo *5521978997994*' })
                            break
                        case 'confirmar o numero adcionado vazio':
                            const buttons18 = [
                                { buttonId: 'simConfirmaAddNumVazio', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'naoConfirmaAddNumVazio', buttonText: { displayText: 'N√£o' }, type: 1 },

                            ];
                            const buttonMessage18 = {
                                text: `${userInfo.apelido} o n√∫mero que deseja adicionar est√° correto?\n\n${userInfo.numeroAnjo}`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons18,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage18);
                            break
                        case 'confirmou o numero que digitou':

                            const buttons19 = [
                                { buttonId: 'enviar notificacao', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'voltar para menu', buttonText: { displayText: 'N√£o' }, type: 1 },
                                { buttonId: 'maisop√ß√µes', buttonText: { displayText: 'Mais op√ß√µes' }, type: 1 },


                            ];
                            const buttonMessage19 = {
                                text: `${userInfo.apelido} deseja enviar a notifica√ß√£o para os n√∫meros abaixo?\n\n${userInfo.numerosAnjo.join('\n')}`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons19,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage19);
                            break
                        case 'pedir para digitar um numero para add mais':
                            await SendMessage(jid, { text: 'Digite um n√∫mero para ser adicionado.' })
                            break
                        case 'confirmar o numero adicionado mais de um numero':
                            const buttons20 = [
                                { buttonId: 'simConfirmaAddMaisNumVazio', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'naoConfirmaAddMaisNumVazio', buttonText: { displayText: 'N√£o' }, type: 1 },

                            ];
                            const buttonMessage20 = {
                                text: `${userInfo.apelido} o n√∫mero que deseja adicionar est√° correto?\n\n- ${userInfo.numeroAnjo}`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons20,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage20);
                            break
                        case 'outras op√ß√µes anjo guardi√£o':
                            const buttons27 = [
                                { buttonId: 'naoConfirmaAddNumVazio', buttonText: { displayText: 'Adicionar mais n√∫meros' }, type: 1 },
                                { buttonId: 'Limpar lista', buttonText: { displayText: 'Limpar Lista' }, type: 1 },
                                { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },



                            ];
                            const buttonMessage27 = {
                                text: `${userInfo.apelido}, escolha uma das op√ß√µes abaixo!`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons27,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage27);
                            break
                        case 'entrou no eu voluntario':
                            const buttons28 = [
                                { buttonId: 'Canais de denuncia 2', buttonText: { displayText: 'Canais de den√∫ncia' }, type: 1 },
                                { buttonId: 'Eu apoio', buttonText: { displayText: 'Eu acolho' }, type: 1 },
                                { buttonId: 'Acolha-me', buttonText: { displayText: 'Acolha-me' }, type: 1 },
                            ];

                            const buttonMessage28 = {
                                text: `Que bom ter voc√™ aqui como volunt√°rio.\nestou ciente que voc√™ √© uma empresa ou pessoa que n√£o se conforma com a viol√™ncia contra a mulher e quer fazer a diferen√ßa\ndenunciando, acolhendo ou sendo acolhida de forma ativa e socialmente participativa!`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons28,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage28);
                            break
                        case 'entrou no Canais de denuncia 2':
                            const buttons29 = [
                                { buttonId: 'disque emergencia 2', buttonText: { displayText: 'Disque Emerg√™ncia' }, type: 1 },
                                { buttonId: 'dununcia 2', buttonText: { displayText: 'Den√∫ncia' }, type: 1 },
                                { buttonId: 'Direitos Humanos', buttonText: { displayText: 'Direitos Humanos' }, type: 1 },
                            ];

                            const buttonMessage29 = {
                                text: `Escolha uma das op√ß√µes abaixo!`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons29,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage29);
                            break
                        case 'entrou no disque emergencia 2':
                            const buttons30 = [
                                { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },

                            ];

                            const buttonMessage30 = {
                                text: '*Pol√≠cia Militar (190)*\n\nO trabalho da pol√≠cia √© garantir a seguran√ßa da popula√ß√£o, a ordem p√∫blica e o cumprimento das leis. Sempre que sofrer ou presenciar algum crime que represente riscos para as pessoas, como assaltos, roubos ou agress√µes.A PM pode ser acionada em casos de perturba√ß√£o da ordem p√∫blica, uma festa com som alto, que incomode a vizinhan√ßa tarde da noite.\n\n*Samu (192)*\n\nNos casos de emerg√™ncias m√©dicas, o mais indicado √© acionar o Servi√ßo de Atendimento M√©dico de Urg√™ncia. O SAMU conta com ambul√¢ncias equipadas e equipe m√©dica qualificada para prestar os atendimentos de emerg√™ncias o mais r√°pido poss√≠vel. Basta ligar para o n√∫mero 192 e relatar o ocorrido, que uma ambul√¢ncia ser√° encaminhada at√© o local.\n\n*Bombeiros (193)*\n\nGrande parte dos acidentes que representam riscos para as pessoas podem ser amenizadas com o socorro imediato do Corpo de Bombeiros. Situa√ß√µes como: resgate de pessoas ou animais; inunda√ß√£o e desabamento; inc√™ndio; afogamento; acidente com animal pe√ßonhento entre outros.\n\n*A Central de Atendimento √† Mulher*\n\nLigue 180 √© um servi√ßo atualmente oferecido pela Ouvidoria Nacional dos Direitos Humanos do Minist√©rio da Mulher, da Fam√≠lia e dos Direitos Humanos (MMFDH). √â uma pol√≠tica p√∫blica essencial para o enfrentamento √† viol√™ncia contra a mulher em √¢mbito nacional e internacional.',
                                footer: 'Para continuar, aperte o bot√£o abaixo!',
                                buttons: buttons30,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage30)
                            break
                        case 'entrou no dununcia 2':
                            await SendMessage(jid, { text: 'Descreva seu depoimento.\nAten√ß√£o: ‚ö†Ô∏èüÜò\nN√£o esque√ßa de procurar ajuda a pessoas  pr√≥ximas e denunciar, juntar  provas, fotos, v√≠deos e testemunhos presenciais.\nLeve o caso as autoridades e registre o BO! (Boletim de ocorr√™ncia).' })
                            break
                        case 'pergunta se quer enviar a denuncia':
                            const buttons31 = [
                                { buttonId: 'SimEnviardenuncia2', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'N√£oEnviardenuncia2', buttonText: { displayText: 'N√£o' }, type: 1 },

                            ];
                            const buttonMessage31 = {
                                text: `O texto acima est√° correto?`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons31,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage31);
                            break
                        case 'denuncia 2 enviada':

                            const buttons32 = [
                                { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },

                            ];

                            const buttonMessage32 = {
                                text: `Dun√∫ncia enviada com sucesso!`,
                                footer: 'Para continuar, aperte o bot√£o abaixo!',
                                buttons: buttons32,
                                headerType: 1
                            }

                            await SendMessage(jid, buttonMessage32)
                            break
                        case 'denuncia 2 n√£o enviada':
                            const buttons33 = [
                                { buttonId: 'Denunciar novamente 2', buttonText: { displayText: 'Denunciar novamente' }, type: 1 },
                                { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },

                            ];

                            const buttonMessage33 = {
                                text: `Sua denuncia n√£o foi enviada.`,
                                footer: 'Escolha uma das op√ß√µes abaixo!',
                                buttons: buttons33,
                                headerType: 1
                            }

                            await SendMessage(jid, buttonMessage33)
                            break
                        case 'entrou em eu apoio':


                            break
                        case 'perguntar o nome da empresa':
                            await SendMessage(jid, { text: 'Digite o nome da sua Empresa.' })
                            break
                        case 'pergunta o endere√ßo da empresa':
                            await SendMessage(jid, { text: 'Digite o endere√ßo da sua Empresa.' })
                            break
                        case 'pergunta o cep da empresa':
                            await SendMessage(jid, { text: 'Digite o CEP da sua Empresa.' })
                            break
                        case 'pergunta o email da empresa':
                            await SendMessage(jid, { text: 'Digite o E-mail da sua Empresa.' })
                            break
                        case 'pergunta o ramo da empresa':
                            await SendMessage(jid, { text: 'Digite o ramo de atividade da sua Empresa.' })
                            break
                        case 'confirmar dados da empresa':
                            const buttons34 = [
                                { buttonId: 'simDadosEmpresa', buttonText: { displayText: 'Sim' }, type: 1 },
                                { buttonId: 'n√£oDadosEmpresa', buttonText: { displayText: 'N√£o' }, type: 1 },
                            ]

                            const buttonMessage34 = {
                                text: `*Os dados abaixo est√£o corretos?*\n\n${userInfo.nome_empresa}\n${userInfo.endereco_empresa}\n${userInfo.cep_empresa}\n${userInfo.email_empresa}\n${userInfo.ramo_de_atividade}`,
                                footer: 'escolha uma das op√ß√µes abaixo!',
                                buttons: buttons34,
                                headerType: 1
                            }

                            await SendMessage(jid, buttonMessage34)
                            break
                        case 'Cancelou o cadastro da empresa':
                            const buttons35 = [
                                { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },
                                { buttonId: 'Eu empresabtn', buttonText: { displayText: 'Cadastrar Novamente' }, type: 1 },
                            ]

                            const buttonMessage35 = {
                                text: `Cadastro cancelado, escolha uma das op√ß√µes abaixo!`,
                                footer: 'escolha uma das op√ß√µes abaixo!',
                                buttons: buttons35,
                                headerType: 1
                            }

                            await SendMessage(jid, buttonMessage35)
                            break
                        case 'empresa cadastrada com sucesso':
                            await SendMessage(
                                jid,
                                {
                                    image: fs.readFileSync("img/empresa.jpeg"),
                                    caption: `*Certificado Digital*\n\nOrgulhosamente certificamos a empresa *${userInfo.nome_empresa}* de forma voluntaria, de pr√≥pria iniciativa e livre decis√£o, aderiu √° causa n√£o viol√™ncia contra mulher e sua autentica√ß√£o cadastral consta em nossas diretrizes do projeto *Diario de Luzia* lei n¬∞ 9.608/1998 que rege o trabalho volunt√°rio.\n\nEntenda o que √© ser volunt√°rio\n\nSer volunt√°rio √© demonstrar seu apoio a um dos principios b√°sicos das *Na√ß√µes Unidas*\nO trabalho conjunto pode tornar o mundo o lugar melhor para todos.\nO volunt√°rio benificia a sociedade em geral e melhora a vida das pessoas incluindo a dos pr√≥prios voluntarios\n\n Obrigado pela nobre iniciativa de entrar para a nossa comunidade de empresas e pessoas que reconhecem que\n*Essa causa √© de todos*.`,
                                    gifPlayback: false
                                }
                            )
                            const buttons36 = [
                                { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },

                            ];

                            const buttonMessage36 = {
                                text: `Formul√°rio enviado com sucesso!`,
                                footer: 'Para continuar, aperte o bot√£o abaixo!',
                                buttons: buttons36,
                                headerType: 1
                            }
                            await SendMessage(jid, buttonMessage36)
                            break
                        case 'Perguntar o nome do embaixador':
                            await SendMessage(jid, { text: 'digite para mim seu nome completo por favor.' })
                            break
                        case 'perguntar o cep do Embaixador':
                            await SendMessage(
                                jid,
                                {
                                    image: fs.readFileSync("img/cep.jpeg"),
                                    caption: "Digite seu CEP.\n\nCaso n√£o saiba seu CEP, clique no link abaixo para consultar.\r\nüîóüì≤https://buscacepinter.correios.com.br/app/endereco/index.php",
                                    gifPlayback: false
                                }
                            )
                            break
                        case 'perguntar data de nascimento do embaixador':
                            SendMessage(jid, { text: 'Digite sua data de nascimento.\n\n*Exemplo: 24/05/1980*' })
                            break
                        case 'perguntar email do embaixador':
                            SendMessage(jid, { text: 'Digite seu E-mail.' })
                            break
                        case 'Embaxador cadastrado com sucesso':
                            const buttons40 = [
                                { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },

                            ];
                            const buttonMessage40 = {
                                image: { url: './img/certificadoEmbaixador.jpeg' },
                                caption: `*CERTIFICADO*\n\nORGULHOSAMENTE CERTIFICAMOS QUE VOC√ä VOLUNT√ÅRIO(A) Por sua pr√≥pria iniciativa e livre decis√£o, aderiu √† causa: n√£o a viol√™ncia contra a mulher e sua autentica√ß√£o cadastral consta em nossas diretrizes do projeto DIARIO DE LUZIA lei n¬∞ 9.608/1998 que rege o trabalho volunt√°rio.\n\nSer volunt√°rio √©  demonstrar seu apoio a um dos princ√≠pios b√°sicos das Na√ß√µes Unidas. O trabalho conjunto pode tornar o mundo um melhor lugar para todos. O voluntariado beneficia a sociedade em geral e melhora a vida das pessoas incluindo a dos pr√≥prios volunt√°rios.\n\nObrigado por sua iniciativa de entrar para  nossa comunidade de pessoas que n√£o se calam e reconhecem que;\n*est√° causa √© de todos n√≥s.*`,
                                footer: 'Dica: Clique no bot√£o abaixo!',
                                buttons: buttons40,
                                headerType: 4
                            }
                            SendMessage(jid, buttonMessage40)
                            break
                        case 'O usu√°rio entrou em Acolha-me':
                            await SendMessage(
                                jid,
                                {
                                    image: fs.readFileSync("img/euacolho.jpeg"),
                                    caption: "Em caso de real necessidade e extrema emerg√™ncia, conte com a rede de apoio de acolhimento dispon√≠vel em todas as cidades adeptas ao projeto Di√°rio de Luzia.Toque no papel de parede em tela cheia e mostre a uma empresa parceira e voc√™ ser√° acolhida com os mais variados produtos e servi√ßos dispon√≠veis em v√°rias cidades do Brasil.",
                                    gifPlayback: false
                                }
                            )
                            await SendMessage(jid, { text: 'consulte a lista de seguimentos, empresas que voc√™ mulher (em vulnerabilidade, v√≠tima de viol√™ncia) pode ser acolhida e generosamente beneficiada.' })
                            await SendMessage(jid, { text: '1Ô∏è‚É£ cl√≠nica/consult√≥rio terap√™utico\nDisponibiliza de forma volunt√°ria (X?) gratuitamente consulta, exames, tratamentos, terapia para mulheres v√≠timas de viol√™ncia.\n\n2Ô∏è‚É£ Escrit√≥rio advocat√≠cios\nDisponibiliza acess√≥ria jur√≠dica gratuita a mulheres  v√≠timas de viol√™ncia\n\n3Ô∏è‚É£institui√ß√µes religiosas, grupos de casais, ongs, institutos associa√ß√µes de bairros e outros Disponibiliza semin√°rios, reuni√µes, palestras de Cascais.\n\n4Ô∏è‚É£ Hot√©is/pousadas\nDisponibiliza Hospedagem/abrigo¬†emergencial¬†a mulheres  v√≠timas de viol√™ncia)\n\n5Ô∏è‚É£companhia de transportes:\nDisponibiliza transportes, passagens, ingressos emergenciais a mulhetes v√≠timas de viol√™ncia:\n\nTaxi,¬† √¥nibus, Mototaxi e outros.\n\n6Ô∏è‚É£Super mercados:\nDisponibilizar cestas b√°sicas a mulhetes em vulnerabilidades v√≠timas de viol√™ncia\n\n7Ô∏è‚É£Farm√°cias e drogarias:\nReceitas, produtos  e Medicamentos a mulheres em vulnerabilidade v√≠timas de viol√™ncia.\n\n8Ô∏è‚É£outros seguimentos...' })
                            //await SendMessage(jid, { text: 'ATEN√á√ÉO ‚ö†Ô∏è\nPara seu conhecimento\nEsse formato de  adesivo ou cartaz √© uma refer√™ncia e identifica√ß√£o de que a empresa  √© parceira volunt√°ria, adepta e apoia o projeto\n*EU ACOLHO Di√°rio de Luzia que acolhe e ajuda  mulheres em vulnerabilidade social  v√≠timas de viol√™ncia.üëáüèº*' })

                            break
                        case 'O usu√°rio entrou em Direitos Humanos':
                            try {
                                const buttons22 = [
                                    { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },

                                ];

                                const buttonMessage22 = {
                                    text: `Para continuar, aperte o bot√£o abaixo!`,
                                    footer: '',
                                    buttons: buttons22,
                                    headerType: 1
                                }
                                await SendMessage(
                                    jid,
                                    {
                                        image: fs.readFileSync("img/direitosHumanos.jpeg"),
                                        caption: "Em caso de constata√ß√£o de viola√ß√£o dos direitos humanos\n\n*Disque üÜòüìûüì≤üëâ* 100\n\n*Ou clique no link*\n\nhttps://mdh.metasix.solutions/portal/servi√ßos",
                                        gifPlayback: false
                                    }
                                )
                                await SendMessage(jid, buttonMessage22)
                            } catch (error) {

                            }

                            break
                        case 'O usu√°rio entrou em Mais op√ß√µes':
                            try {
                                const buttons22 = [
                                    { buttonId: 'Publicidade social', buttonText: { displayText: 'Publicidade social' }, type: 1 },
                                    // { buttonId: 'Enviar Feedback', buttonText: { displayText: 'Enviar Feedback' }, type: 1 },
                                    // { buttonId: 'Livro Luiza-Homem', buttonText: { displayText: 'Livro Luiza-Homem' }, type: 1 },
                                ];

                                const buttonMessage22 = {
                                    text: `Para continuar, escolha uma das op√ß√µes abaixo!`,
                                    footer: '',
                                    buttons: buttons22,
                                    headerType: 1
                                }

                                await SendMessage(jid, buttonMessage22)
                            } catch (error) {

                            }
                            break
                        case 'O usu√°rio entrou em Publicidade social':
                            try {
                                console.log('cheguei aqui')
                                const buttons22 = [
                                    { buttonId: 'Compartilhar Chatbot', buttonText: { displayText: 'Compartilhar Chatbot' }, type: 1 },
                                    { buttonId: 'Menu inicial', buttonText: { displayText: 'Menu inicial' }, type: 1 },

                                ];

                                const buttonMessage22 = {
                                    text: `Para continuar, aperte o bot√£o abaixo!`,
                                    footer: '',
                                    buttons: buttons22,
                                    headerType: 1
                                }
                                await SendMessage(
                                    jid,
                                    {
                                        image: fs.readFileSync("img/dairometro.jpeg"),
                                        caption: `Publique, compartilhe esse banner/Link com sua agenda, redes sociais e contribua com esta causa de forma volunt√°ria.\nAjude a levar est√°  solu√ß√£o h√° ao m√°ximo  de mulheres e usu√°rios que voc√™ conhecer.\nEsta causa √©  de todos.`,
                                        gifPlayback: false
                                    }
                                )
                                await SendMessage(jid, buttonMessage22)
                            } catch (error) {

                            }


                            break
                        case 'O usu√°rio entrou em Compartilhar Chatbot':
                            const ppUrl = await sock.profilePictureUrl(jid, 'image')
                            console.log("download profile picture from: " + ppUrl)
                            await SendMessage(
                                jid,
                                {
                                    image: { url: ppUrl },
                                    caption: `Publique, compartilhe esse banner/Link com sua agenda, redes sociais e contribua com esta causa de forma volunt√°ria.\nAjude a levar est√°  solu√ß√£o h√° ao m√°ximo  de mulheres e usu√°rios que voc√™ conhecer.\nEsta causa √©  de todos.`,
                                    gifPlayback: false
                                }
                            )

                            break
                        default:
                            console.log(`fora de qualquer stage`);
                    }
                }


            } catch (error) {

            }


        }
    })

}
Connection()